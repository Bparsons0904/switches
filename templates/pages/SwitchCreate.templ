package pages

import (
	"fmt"
	"strconv"
	"switches/templates/components"
	"switches/templates/components/icons"
)

type SwitchCreateInput struct {
	SwitchTypes   []components.Option
	Brands        []components.Option
	Manufacturers []components.Option
}

var ()

templ SwitchCreate(input SwitchCreateInput) {
	<section>
		@components.FormContainer(
			components.Form{
				ID:   "switch-create-form",
				Post: "/admin/switches/create"}) {
			@components.TextInput(components.Input{
				Name:        "switch-name",
				Label:       "Switch Name",
				Placeholder: "Enter switch name"})
			<!-- @components.TextInput(components.Input{ -->
			<!-- 	Name:        "short-desc", -->
			<!-- 	Label:       "Short Description", -->
			<!-- 	Placeholder: "Enter Short Description"}) -->
			<!-- @components.AreaInput(components.Input{ -->
			<!-- 	Name:        "long-desc", -->
			<!-- 	Label:       "Long Description", -->
			<!-- 	Placeholder: "Enter Long Description"}) -->
			<!-- @components.SelectInput(components.Select{ -->
			<!-- 	Name:        "switch-type", -->
			<!-- 	Label:       "Switch Type", -->
			<!-- 	Options:     input.SwitchTypes, -->
			<!-- 	Placeholder: "Select switch type"}) -->
			<!-- @components.SelectInput(components.Select{ -->
			<!-- 	Name:        "brand", -->
			<!-- 	Label:       "Brand", -->
			<!-- 	Options:     input.Brands, -->
			<!-- 	Placeholder: "Select switch brand"}) -->
			<!-- @components.SelectInput(components.Select{ -->
			<!-- 	Name:        "manufacturer", -->
			<!-- 	Label:       "Manufacturer", -->
			<!-- 	Options:     input.Manufacturers, -->
			<!-- 	Placeholder: "Select switch manufacturer"}) -->
			<!-- @components.DateInput(components.Input{ -->
			<!-- 	Name:        "release-date", -->
			<!-- 	Label:       "Release Date", -->
			<!-- 	Placeholder: "Select release date"}) -->
			<!-- @components.CheckBox(components.CheckInput{ -->
			<!-- 	Name:    "available", -->
			<!-- 	Label:   "Available", -->
			<!-- 	Checked: true}) -->
			<!-- @components.NumberInput(components.Number{ -->
			<!-- 	Name:        "price", -->
			<!-- 	Label:       "Price", -->
			<!-- 	Min:         "1", -->
			<!-- 	Max:         "3", -->
			<!-- 	Step:        "1", -->
			<!-- 	Placeholder: "Enter switch price"}) -->
			<!-- @components.TextInput(components.Input{ -->
			<!-- 	Name:        "site-url", -->
			<!-- 	Label:       "Site URL", -->
			<!-- 	Placeholder: "Enter switch site URL"}) -->
			<div id="image-links-container">
				<div id="image-links-wrapper">
					@ImageLinkForm([]ImageLinksInput{
						{AltText: "adsf", LinkAddress: "asdf"},
					})
				</div>
			</div>
		}
	</section>
}

type ImageLinksInput struct {
	AltText     string
	LinkAddress string
}

templ ImageLinkForm(imageLinks []ImageLinksInput) {
	<input type="hidden" name="link-count" value={ strconv.Itoa(len(imageLinks)) }/>
	for i := 0; i < len(imageLinks); i++ {
		@ImageLink(i, imageLinks[i])
		<div style="display:flex; flex-direction: row; justify-content: space-between">
			if len(imageLinks) == i + 1 {
				<div
					hx-get="/admin/images/create"
					hx-target="#image-links-wrapper"
					hx-params="*"
					hx-include="closest form"
				>
					@icons.IconButton("success") {
						@icons.Add()
					}
				</div>
			}
			if len(imageLinks) >= 2 {
				<div
					hx-delete={ "/admin/images/" + strconv.Itoa(i) }
					hx-target="#image-links-wrapper"
					style="margin-left: auto"
				>
					@icons.IconButton("danger") {
						@icons.Delete()
						{ fmt.Sprintf("Image %d", i + 1) }
					}
				</div>
			}
		</div>
	}
}

templ ImageLink(index int, imageLink ImageLinksInput) {
	<div>
		<h3 style="margin-bottom: .5rem">{ fmt.Sprintf("Image %d", index + 1) }</h3>
		@components.TextInput(components.Input{
			Name:        "link-address-" + strconv.Itoa(index),
			Label:       "Image URL",
			Placeholder: "Enter switch image link",
			Value:       imageLink.LinkAddress,
			Required:    true})
		@components.TextInput(components.Input{
			Name:        "link-alt-text-" + strconv.Itoa(index),
			Label:       "Image Alt Text",
			Value:       imageLink.AltText,
			Placeholder: "Enter switch image alt text",
			Required:    true})
	</div>
}
