package pages

import (
	"fmt"
	"switches/database"
	"switches/models"
	"switches/templates/components"
	"switches/templates/layouts"
	"switches/utils"
)

templ HomePage(user models.User) {
	@layouts.Root() {
		@Home(user)
	}
}

templ Home(user models.User) {
	<div class="">
		@components.Navbar("home", user)
		<main id="home">
			<section id="cta" class="dark">
				<div class="cta-wrapper">
					<div class="cta-header">
						<h1>
							Find Your Perfect Switch
						</h1>
						<p>
							Discover the ideal mechanical switch that fits your personal style and typing or gaming preferences.
						</p>
						<a htmx-get hx-get="/switches" hx-target="#body" hx-push-url="/switches">
							<button type="button" class="button button-light">
								Get Started
							</button>
						</a>
					</div>
					<div class="cta-image">
						@components.Image(components.ImageProps{
							Src:      "drop_holy_panda_x.jpg",
							Alt:      "Drop Holy Panda X Mechanical Switches",
							IsSquare: false,
						})
					</div>
				</div>
			</section>
			<section id="home-recommendations">
				<div class="home-wrapper">
					<div class="header">
						<h2>Personalized Switch Recommendations</h2>
						<p>
							Our advanced algorithms and AI-powered recommendations help you find the perfect mechanical switch for your
							typing needs and personal style.
						</p>
					</div>
					<div id="discovery">
						@components.DiscoveryCard(components.DiscoveryCardProps{
							Icon:        "magnifying-glass",
							Title:       "Discover",
							Description: "Browse our extensive collection of mechanical switches.",
						})
						@components.DiscoveryCard(components.DiscoveryCardProps{
							Icon:        "settings",
							Title:       "Personalize",
							Description: "Use our filters and AI recommendations to find your perfect match.",
						})
					</div>
				</div>
				<div class="discovery-image">
					@components.Image(components.ImageProps{
						Src:      "kaihl.webp",
						Alt:      "Kaihl box style switches",
						IsSquare: false,
					})
				</div>
			</section>
			<section id="featured">
				<div class="featured-header">
					<h2>Featured Mechanical Switches</h2>
					<p>Explore our selection of the most popular and highly-rated mechanical switches.</p>
				</div>
				<div class="featured-switches">
					@DisplayFeaturedSwitches(getFeaturedSwitches())
				</div>
			</section>
		</main>
	</div>
}

func getFeaturedSwitches() []components.SwitchCardProps {
	timer := utils.StartTimer("getFeaturedSwitches")
	var switchesFromDB []models.Switch
	database.DB.
		Joins("INNER JOIN image_links ON image_links.owner_id = switches.id").
		Preload("ImageLinks").
		Limit(4).
		Order("RANDOM()").
		Find(&switchesFromDB)

	timer.LogTotalTime("getFeaturedSwitches")

	var switches []components.SwitchCardProps // Declare the variable
	for _, s := range switchesFromDB {
		imageLink := s.ImageLinks[0].LinkAddress
		imageAlt := fmt.Sprintf("Image of %s switch", s.Name)
		newSwitch := components.SwitchCardProps{
			Title:       s.Name,
			Description: s.ShortDescription,
			ImageSrc:    imageLink,
			ImageAlt:    imageAlt,
		}

		switches = append(switches, newSwitch)
	}

	return switches
}

templ DisplayFeaturedSwitches(switches []components.SwitchCardProps) {
	<div class="switch-cards">
		for _, item := range switches {
			@components.SwitchCard(item)
		}
	</div>
}
