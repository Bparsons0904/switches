package components

import (
	"fmt"
	"switches/models"
	"switches/templates/components/icons"
)

templ SwitchListMore(props SwitchesFilterProps) {
	for _, clickyClack := range props.ClickyClacks {
		@SwitchCardPreview(props.User, clickyClack)
	}
	<div id="filter" hx-swap-oob="true">
		@SwitchFilter(props)
	</div>
}

func getFilterData(user models.User, clickyClacks []models.Switch) templ.Component {

	props := SwitchesFilterProps{
		User:         user,
		ClickyClacks: clickyClacks,
	}
	return SwitchFilter(props)
}

templ SwitchList(user models.User, clickyClacks []models.Switch) {
	for _, clickyClack := range clickyClacks {
		@SwitchCardPreview(user, clickyClack)
	}
	if len(clickyClacks) >= 20 {
		<section
			id="switch-more"
			hx-get="/switches/list/more"
			hx-trigger="load"
			hx-swap="outerHTML"
			hx-include="#filter-form, #search-form"
		></section>
	}
}

templ SwitchCardPreview(user models.User, clickyClack models.Switch) {
	<div
		class="switch-card-preview"
		id={ clickyClack.ID.String() }
		hx-trigger="click"
		hx-get={ fmt.Sprintf("/switches/%s", clickyClack.ID) }
		hx-push-url={ fmt.Sprintf("/switches/%s", clickyClack.ID) }
		hx-target="#main"
		hx-disinherit="*"
		hx-swap="show:top"
	>
		<div class="switch-image">
			@GetSwitchImageLink(clickyClack)
		</div>
		<div class="switch-details">
			<h2>{ clickyClack.Name }</h2>
			<div class="attributes">
				{ clickyClack.SwitchType.Name }
				<span class="divider">|</span>
				{ clickyClack.Brand.Name }
				<span class="divider">|</span>
				<span class="price-point">
					for i := 0; i < clickyClack.PricePoint; i++ {
						@icons.Dollar()
					}
				</span>
			</div>
			<div class="switch-selectors">
				@LikedSelector(user, clickyClack)
				@OwnedSelector(user, clickyClack)
				<span class="share-wrapper">
					<a
						class="share-button"
						hx-on:click="shareSwitchDetail(event)"
						data-switch-name={ clickyClack.Name }
						data-switch-id={ clickyClack.ID.String() }
					>
						@icons.Share()
					</a>
				</span>
			</div>
			<div class="rating-container">
				@Ratings(clickyClack, false)
			</div>
		</div>
	</div>
}
