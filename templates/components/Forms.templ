package components

import (
	"fmt"
	"strconv"
)

type Input struct {
	ID          string
	Name        string
	Label       string
	Placeholder string
	Value       string
	Required    bool
}

templ TextInput(input Input) {
	<div class="form-group">
		<label for={ input.Name }>{ input.Label }</label>
		<input
			type="text"
			if input.ID != "" {
				id={ fmt.Sprintf("%s-%s", input.ID, input.Name) }
			} else {
				id={ input.Name }
			}
			name={ input.Name }
			placeholder={ input.Placeholder }
			value={ input.Value }
			if input.Required {
				required
			}
		/>
	</div>
}

templ AreaInput(input Input) {
	<div class="form-group">
		<label for={ input.Name }>{ input.Label }</label>
		<textarea
			if input.ID != "" {
				id={ fmt.Sprintf("%s-%s", input.ID, input.Name) }
			} else {
				id={ input.Name }
			}
			name={ input.Name }
			placeholder={ input.Placeholder }
		>
			{ input.Value }
		</textarea>
	</div>
}

type Option struct {
	Value       string
	Label       string
	Placeholder string
}

type Select struct {
	ID          string
	Name        string
	Label       string
	Options     []Option
	Selected    string
	Placeholder string
	Required    bool
}

templ SelectInput(input Select) {
	<div class="form-group">
		<label for={ input.Name }>{ input.Label }</label>
		<select
			if input.ID != "" {
				id={ fmt.Sprintf("%s-%s", input.ID, input.Name) }
			} else {
				id={ input.Name }
			}
			name={ input.Name }
			if input.Required {
				required
			}
		>
			<option value="">{ input.Placeholder }</option>
			for _, option := range input.Options {
				<option
					value={ option.Value }
					if option.Value == input.Selected {
						selected
					}
				>{ option.Label }</option>
			}
		</select>
	</div>
}

templ DateInput(input Input) {
	<div class="form-group">
		<label for={ input.Name }>{ input.Label }</label>
		<input
			type="date"
			id={ input.Name }
			name={ input.Name }
			class="date-input"
			value={ input.Value }
		/>
	</div>
}

type Number struct {
	ID          string
	Name        string
	Label       string
	Min         string
	Max         string
	Step        string
	Placeholder string
	Value       int
	Required    bool
}

templ NumberInput(input Number) {
	<div class="form-group">
		<label for={ input.Name }>{ input.Label }</label>
		<input
			type="number"
			if input.ID != "" {
				id={ fmt.Sprintf("%s-%s", input.ID, input.Name) }
			} else {
				id={ input.Name }
			}
			name={ input.Name }
			min={ input.Min }
			max={ input.Max }
			step={ input.Step }
			class="number-input"
			placeholder={ input.Placeholder }
			if input.Required {
				required
			}
			value={ strconv.Itoa(input.Value) }
		/>
	</div>
}

type CheckInput struct {
	ID          string
	Name        string
	Label       string
	Checked     bool
	Placeholder string
}

templ CheckBox(input CheckInput) {
	<div class="form-group">
		<label class="checkbox-label" for={ input.Name }>
			{ input.Label }
			<input
				if input.ID != "" {
					id={ fmt.Sprintf("%s-%s", input.ID, input.Name) }
				} else {
					id={ input.Name }
				}
				type="checkbox"
				name={ input.Name }
				if input.Checked {
					checked
				}
			/>
			<span class="checkmark"></span>
		</label>
	</div>
}

type Form struct {
	ID         string
	Get        string
	Post       string
	Put        string
	Include    string
	ButtonText string
	Target     string
	Button     templ.Component
}

templ FormContainer(input Form) {
	<div class="form-container">
		<form
			id={ input.ID }
			if input.Get != "" {
				hx-get={ input.Get }
			}
			if input.Post != "" {
				hx-post={ input.Post }
			}
			if input.Put != "" {
				hx-put={ input.Put }
			}
			if input.Include != "" {
				hx-include={ input.Include }
			}
			if input.Target != "" {
				hx-target={ input.Target }
			}
		>
			{ children... }
			if input.Button != nil {
				@input.Button
			} else {
				<div style="width: 100%; margin-top: 12px">
					<button type="submit" class="button" style="margin-left: auto; display: block;">
						if len(input.ButtonText) > 0 {
							{ input.ButtonText }
						} else {
							Submit
						}
					</button>
				</div>
			}
		</form>
	</div>
}
