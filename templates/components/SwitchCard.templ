package components

import (
	"github.com/google/uuid"
	"switches/models"
	"switches/templates/components/icons"
)

script withUpdateQueryParams(switchID uuid.UUID) {
  const url = new URL(window.location);
  url.searchParams.set("modal", switchId);
  window.history.pushState({}, "", url);

  const modalLoader = document.getElementById("modal-loader");
  modalLoader.innerHTML = `
    <div hx-get="/switches/${switchId}/modal"
         hx-trigger="load"
         hx-target="#portal"
         hx-swap="innerHTML"></div>
  `;
  htmx.process(modalLoader);
}

templ SwitchCardPreview(clickyClack models.Switch) {
	<button
		class="switch-card-preview"
		id={ clickyClack.ID.String() }
		onclick={ withUpdateQueryParams(clickyClack.ID) }
	>
		<div class="switch-image">
			@getSwitchImageLink(clickyClack)
		</div>
		<div class="switch-details">
			<h2>{ clickyClack.Name }</h2>
			<div class="attributes">
				{ clickyClack.SwitchType.Name }
				<span class="price-point">
					for i := 0; i < clickyClack.PricePoint; i++ {
						@icons.Dollar()
					}
				</span>
			</div>
		</div>
	</button>
}

templ SwitchCardFeatured(clickyClack models.Switch) {
	<button
		class="switch-card-featured"
		id={ clickyClack.ID.String() }
		onclick={ withUpdateQueryParams(clickyClack.ID) }
	>
		<div class="switch-image">
			@getSwitchImageLink(clickyClack)
		</div>
		<div class="switch-details">
			<h2>{ clickyClack.Name }</h2>
			<p>{ clickyClack.SwitchType.Name }</p>
		</div>
	</button>
}
