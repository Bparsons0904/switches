package components

import (
	"fmt"
	"switches/models"
	"switches/templates/components/icons"
	"switches/templates/layouts"
)

templ SwitchDetailCard(clickyClack models.Switch) {
	@layouts.Modal() {
		<div class="switch-detail-card">
			<div class="switch-images">
				@getSwitchImageLink(clickyClack)
			</div>
			<div class="switch-header">
				<div class="switch-names">
					<h1>{  clickyClack.Name }</h1>
					<h3>{ clickyClack.Brand.Name }<span>|</span>{ clickyClack.SwitchType.Name }</h3>
				</div>
				<div class="switch-selectors">
					<a
						class="heart"
						hx-post={ fmt.Sprintf("/switches/%s/liked", clickyClack.ID) }
					>
						@icons.HeartOutlined()
					</a>
					<a
						hx-post={ fmt.Sprintf("/switches/%s/owned", clickyClack.ID) }
					>
						@icons.Checkmark()
					</a>
				</div>
			</div>
			<p>{ clickyClack.LongDescription }</p>
			<div class="ratings"></div>
		</div>
	}
}

func getSwitchImageLink(clickyClack models.Switch) templ.Component {
	if len(clickyClack.ImageLinks) == 0 {
		return Image(ImageProps{
			Src:      "switch_placeholder.jpg",
			Alt:      "Placeholder image",
			IsSquare: true,
		})
	}

	if len(clickyClack.ImageLinks) == 1 {
		return ImageLink(ImageProps{
			Src:      clickyClack.ImageLinks[0].LinkAddress,
			Alt:      clickyClack.ImageLinks[0].AltText,
			IsSquare: true,
		})
	}

	var imageLinks []ImageProps
	for _, imageLink := range clickyClack.ImageLinks {
		imageLinks = append(imageLinks, ImageProps{
			Src:      imageLink.LinkAddress,
			Alt:      imageLink.AltText,
			IsSquare: true,
		})
	}

	return ImageLinks(imageLinks[:2])
}
