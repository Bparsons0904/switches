package components

import (
	"fmt"
	"github.com/google/uuid"
	"log"
	"net/url"
	"switches/models"
	"switches/services"
)

templ Navbar(route string, user models.User) {
	<header id="header">
		<a
			class="header-wrapper"
			hx-get="/"
			hx-target="#body"
			hx-push-url="/"
		>
			<div class="img-wrapper">
				<img src="/images/switches_logo_white.webp" alt="switclh as a logo"/>
			</div>
			<h1 class="text-light">Waugze</h1>
		</a>
		@getUserStatusButton(user)
	</header>
}

func getUserStatusButton(user models.User) templ.Component {
	if user.ID != uuid.Nil {
		return LogoutButton()
	} else {
		return LoginButton()
	}
}

templ LogoutButton() {
	<a
		href="/auth/logout"
	><button type="button">Logout</button></a>
}

templ LoginButton() {
	<a href={ templ.SafeURL(getLoginLink()) }><button type="button">Login</button></a>
}

func getLoginLink() string {
	auth, err := services.GenerateAuthString()
	if err != nil {
		log.Println("Error generating auth string", err)
		return ""
	}

	authURL := fmt.Sprintf(
		"https://%s/oauth/v2/authorize?client_id=%s&redirect_uri=%s&response_type=code&scope=%s&state=%s&nonce=%s&code_challenge=%s&code_challenge_method=S256",
		auth.AuthURL,
		auth.ClientID,
		url.QueryEscape(auth.CallbackURL),
		url.QueryEscape("openid profile email offline_access"),
		auth.State,
		auth.Nonce,
		auth.CodeChallenge,
	)
	return authURL
}
