kind: pipeline
type: docker
name: switches-pipeline

steps:
  - name: build-staging
    image: docker:dind
    volumes:
      - name: dockersock_build
        path: /var/run/docker.sock
    commands:
      - docker build -t switches_stage:latest .
    when:
      branch:
        - main

  - name: deploy-staging
    image: docker:dind
    volumes:
      - name: dockersock_stage
        path: /var/run/docker.sock
    environment:
      DOCKER_IMAGE: switches_stage
      IMAGE_TAG: latest
      BUILD_ENV: staging
      ENVIRONMENT: staging
      SERVER_PORT: 3030
      EXTERNAL_PORT: 3070
      TIER:
        from_secret: TIER_STAGE
      BASE_URL:
        from_secret: BASE_URL_STAGE
      DB_HOST:
        from_secret: DB_HOST
      DB_USER:
        from_secret: DB_USER
      DB_PASSWORD:
        from_secret: DB_PASSWORD_STAGE
      DB_NAME:
        from_secret: DB_NAME
      DB_PORT:
        from_secret: DB_PORT_STAGE
    commands:
      - docker-compose up -d --build
      - docker-compose ps
      - docker image prune -f
    when:
      branch:
        - main

  - name: build-production
    image: docker:dind
    volumes:
      - name: dockersock_build
        path: /var/run/docker.sock
    commands:
      - docker build -t switches:${DRONE_COMMIT_SHA} .
    when:
      event:
        - tag
      ref:
        - refs/tags/v*

  - name: deploy-production
    image: docker:dind
    volumes:
      - name: dockersock_prod
        path: /var/run/docker.sock
    environment:
      DOCKER_IMAGE: switches
      IMAGE_TAG: ${DRONE_COMMIT_SHA}
      BUILD_ENV: production
      ENVIRONMENT: production
      SERVER_PORT: 3030
      EXTERNAL_PORT: 3030
      TIER:
        from_secret: TIER_PROD
      BASE_URL:
        from_secret: BASE_URL_PROD
      DB_HOST:
        from_secret: DB_HOST
      DB_USER:
        from_secret: DB_USER
      DB_PASSWORD:
        from_secret: DB_PASSWORD_PROD
      DB_NAME:
        from_secret: DB_NAME
      DB_PORT:
        from_secret: DB_PORT_PROD
    commands:
      - docker-compose up -d --build
      - docker-compose ps
      - docker image prune -f
    when:
      event:
        - tag
      ref:
        - refs/tags/v*

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
